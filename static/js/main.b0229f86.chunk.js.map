{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newText","toLocaleUpperCase","showAlert","toLocaleLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.b0229f86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport react, { useState } from \"react\"\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light \"}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\n///proptypes-for checking the datatype being sent from the app.js file for the components\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n}\r\n///default props\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"abput text here\"\r\n};\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\nconst handleUpClick=()=>{\r\n    let newText=text.toLocaleUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\",\"success\");\r\n}\r\nconst handleOnChange=(event)=>{///we need this to see changes that we make when entering the text inside  the text area\r\n    console.log(\"Onchange\");///just for conole purpose\r\n    setText(event.target.value);\r\n}\r\nconst handleLoClick=()=>{\r\n    let newText=text.toLocaleLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\",\"success\");\r\n}\r\nconst clearText =()=>{\r\n    let newText=\"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared\",\"success\");\r\n}\r\nconst handleCopy=()=>{\r\n    console.log(\"i am copying this text\");\r\n    var text=document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to CLipboard\",\"success\");\r\n}\r\nconst handleExtraSpaces=()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"extra spaces removed\",\"success\");\r\n}\r\n\r\n    const [text,setText]=useState(\"\");\r\n    ///hooks syntax and are given inside functional component\r\n    ///here text is the default value wwe give through the useState() and when we want to change we use setText\r\n    ///to change a state we have to use the function setText() cant do using assignment operator\r\n    return (\r\n        <>\r\n        <div className='container' style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode===\"dark\"?\"grey\":\"white\",color :props.mode===\"dark\"?\"white\":\"black\"}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={clearText}>clear</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n        </div>\r\n\r\n        <div className=\"container my-3\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n            <h1>Your text Summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n\r\n            <h2>Previews</h2>\r\n            <p>{text.length<0?text: \"Enter something in the textbox to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        <div>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>:  {props.alert.msg}\r\n                \r\n            </div>\r\n}       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React,{ useState } from 'react';\nimport Alert from './components/Alert';\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode,setMode] = useState(\"light\");///tells whether dark mode is enabled or not mode is default and setmode is after setting it asigns to mode\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n    setAlert({///alert is an object here\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },3000);\n  }\n  const toggleMode=()=>{\n    if(mode === \"light\")\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor=\"#16047a\";\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title=\"TextUtils-Dark Mode\";\n    }\n    else\n    {\n      setMode(\"light\");\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode has been enabled\",\"success\");\n      document.title=\"TextUtils-Light Mode\";\n    }\n  }\n\n  return (\n    <>\n      {/* <BrowserRouter> */}\n        <Navbar\n          title=\"TextUtils2\"\n          aboutText=\"TextAbouts\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-4\" mode={mode}>\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About />}></Route> */}\n            {/* <Route */}\n              {/* exact path=\"/\" */}\n              {/* element={ */}\n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"Enter Text to analyze \"\n                  mode={mode}\n                />\n              {/* } */}\n            {/* ></Route> */}\n          {/* </Routes> */}\n        </div>\n      {/* </BrowserRouter> */}\n    </>\n  );\n            }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}