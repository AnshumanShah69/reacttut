{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Link","aria-current","to","aboutText","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","disabled","length","newText","toLocaleUpperCase","showAlert","toLocaleLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","About","myStyle","data-bs-parent","defaultProps","Alert","height","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","BrowserRouter","body","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.ed3d140a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport react, { useState } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light \"}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\n///proptypes-for checking the datatype being sent from the app.js file for the components\r\n///only for checking the datatype of the props being sent from the App.js file\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n}\r\n///default props if no props are passed from the app.js file\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"about text here\"\r\n};\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\nconst handleUpClick=()=>{\r\n    let newText=text.toLocaleUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\",\"success\");\r\n}\r\nconst handleOnChange=(event)=>{///we need this to see changes that we make when entering the text inside  the text area\r\n    console.log(\"Onchange\");///just for conole purpose\r\n    setText(event.target.value);\r\n}\r\nconst handleLoClick=()=>{\r\n    let newText=text.toLocaleLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\",\"success\");\r\n}\r\nconst clearText =()=>{\r\n    let newText=\"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared\",\"success\");\r\n}\r\nconst handleCopy=()=>{\r\n    console.log(\"i am copying this text\");\r\n    var text=document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Copied to CLipboard\",\"success\");\r\n}\r\nconst handleExtraSpaces=()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"extra spaces removed\",\"success\");\r\n}\r\n\r\n    const [text,setText]=useState(\"\");\r\n    ///hooks syntax and are given inside functional component\r\n    ///here text is the default value wwe give through the useState() and when we want to change we use setText\r\n    ///to change a state we have to use the function setText() cant do using assignment operator\r\n    return (\r\n        <>\r\n        <div className='container' style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n            <h1 className='mb-4'>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode===\"dark\"?\"#13466e\":\"white\",color :props.mode===\"dark\"?\"white\":\"black\"}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={clearText}>clear</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n        </div>\r\n\r\n        <div className=\"container my-3\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n            <h1>Your text Summary</h1>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n\r\n            <h2>Previews</h2>\r\n            <p>{text.length<0?text: \"Enter something in the textbox to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle,setMyStyle] = useState({///here we are making state variables to make it interative\r\n    //     color:\"black\",\r\n    //     backgroundColor:\"white\"\r\n    // })\r\n    let myStyle={\r\n        color:props.mode==='dark'?'white':'rgb(17 0 117)',\r\n        backgroundColor:props.mode==='dark'?'rgb(17 0 117)':'white'\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className='container' style={myStyle}>\r\n            <h1 className='my-3' style={{color:props.mode==='dark'?'white':'rgb(17 0 117)'}}>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>Lorem ipsum dolor sit amet consectetur adipisicing elit. Animi explicabo necessitatibus praesentium. Tempore repellat quaerat optio quidem ducimus omnis quos!</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>Lorem ipsum dolor sit amet consectetur adipisicing elit. Officiis vero aspernatur id animi tempore officia fugiat atque, modi odit nisi.</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempora, omnis aperiam? Deleniti molestias, asperiores nobis sit cum a iusto voluptatibus.</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:\"50px\"}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>:  {props.alert.msg}\r\n\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React,{ useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode,setMode] = useState(\"light\");///tells whether dark mode is enabled or not mode is default and setmode is after setting it asigns to mode\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n    setAlert({///alert is an object here\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },3000);\n  }\n  const toggleMode=()=>{\n    if(mode === \"light\")\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor=\"#16047a\";\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      // document.title=\"TextUtils-Dark Mode\";\n    }\n    else\n    {\n      setMode(\"light\");\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode has been enabled\",\"success\");\n      // document.title=\"TextUtils-Light Mode\";\n    }\n  }\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar\n          title=\"TextUtils2\"\n          aboutText=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-4\" mode={mode}>\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode}/>}></Route>\n            <Route\n               exact path=\"/\" \n               element={ \n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"TextUtils-WordCounter,Character counter,remove extra spaces \"\n                  mode={mode}\n                />\n               }\n             ></Route> \n          </Routes>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n            }\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}